from Crypto.Cipher import AES
from Crypto.Protocol.KDF import scrypt
from Crypto.Util.Padding import pad, unpad
from Crypto.Random import get_random_bytes
import json

#password derivation-based script to store the private-key. The results are saved in a json file.

password = b"password"
salt = get_random_bytes(16)

key = scrypt(password, salt, 32, N = 2**20, r = 8, p = 1)

private_key = Web3.toHex(private_key)[2:]
data = str(private_key).encode('utf-8')

cipher = AES.new(key, AES.MODE_CBC)
ct_bytes = cipher.encrypt(pad(data, AES.block_size))

salt = salt.hex()
iv = cipher.iv.hex()
ct = ct_bytes.hex()

output = {"salt" : salt, "initialization vector" : iv, "encrypted private key" : ct}

with open(address + '.txt', 'w') as json_file:
	json.dump(output, json_file)